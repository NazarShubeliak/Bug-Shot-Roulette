import pygame
import sys
import random

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Pygame
pygame.init()

# –û—Ç—Ä–∏–º—É—î–º–æ —Ä–æ–∑–¥—ñ–ª—å–Ω—É –∑–¥–∞—Ç–Ω—ñ—Å—Ç—å –µ–∫—Ä–∞–Ω—É
screen_width, screen_height = pygame.display.Info().current_w, pygame.display.Info().current_h

# –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –≤—ñ–∫–Ω–æ –Ω–∞ –≤–µ—Å—å –µ–∫—Ä–∞–Ω
screen = pygame.display.set_mode((screen_width, screen_height), pygame.FULLSCREEN)

# –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –Ω–∞–∑–≤—É –≤—ñ–∫–Ω–∞
pygame.display.set_caption("Bug Shot Roulette (Parody)")

# –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π —Ñ–æ–Ω —ñ –∫–Ω–æ–ø–∫–∏
background = pygame.image.load("./img/bg.png")
background = pygame.transform.scale(background, (screen_width, screen_height))

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–Ω–æ–ø–æ–∫
play_button = pygame.image.load("./img/start_button.png")
options_button = pygame.image.load("./img/options_button.png")
exit_button = pygame.image.load("./img/exit_button.png")

# –ú–∞—Å—à—Ç–∞–±—É—î–º–æ –∫–Ω–æ–ø–∫–∏ –ø—ñ–¥ –Ω–æ–≤—ñ —Ä–æ–∑–º—ñ—Ä–∏ (–≤ –¥–≤–∞ —Ä–∞–∑–∏ –±—ñ–ª—å—à—ñ)
button_width, button_height = 300, 100  # –¢–µ–ø–µ—Ä –∫–Ω–æ–ø–∫–∏ –≤ –¥–≤–∞ —Ä–∞–∑–∏ –±—ñ–ª—å—à—ñ
play_button = pygame.transform.scale(play_button, (button_width, button_height))
options_button = pygame.transform.scale(options_button, (button_width, button_height))
exit_button = pygame.transform.scale(exit_button, (button_width, button_height))

# –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø–æ–∑–∏—Ü—ñ—ó –∫–Ω–æ–ø–æ–∫
play_button_rect = play_button.get_rect(center=(screen_width // 2, screen_height // 3))
options_button_rect = options_button.get_rect(center=(screen_width // 2, screen_height // 2))
exit_button_rect = exit_button.get_rect(center=(screen_width // 2, screen_height * 2 // 3))

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–∞—Ä—Ç–∏–Ω–∫–∏ –¥–∏–∫—Ç–æ—Ä–∞
dictator_image = pygame.image.load("./img/dictator.png")
dictator_image = pygame.transform.scale(dictator_image, (900, 524))  # –ú–∞—Å—à—Ç–∞–±—É—î–º–æ –∫–∞—Ä—Ç–∏–Ω–∫—É –¥–∏–∫—Ç–æ—Ä–∞
dictator_rect = dictator_image.get_rect(center=(screen_width // 2, 570))  # –¶–µ–Ω—Ç—Ä—É—î–º–æ –∫–∞—Ä—Ç–∏–Ω–∫—É

# –ó–º—ñ–Ω–Ω–∏–π –∫—É—Ä—Å–æ—Ä
default_cursor = pygame.cursors.arrow
hand_cursor = pygame.cursors.diamond

# –ó–º—ñ–Ω–Ω–∞ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–∏–∫—Ç–æ—Ä–∞
show_dictator = False
show_buttons = True  # –§–ª–∞–≥ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–Ω–æ–ø–æ–∫

# --------------------
# –î–û–î–ê–ù–û: –ü–æ—á–∞—Ç–æ–∫ —ñ–≥—Ä–æ–≤–æ—ó –ª–æ–≥—ñ–∫–∏
# --------------------

# –ö–ª–∞—Å–∏ —Ç–∞ —Ñ—É–Ω–∫—Ü—ñ—ó –≥—Ä–∏ (—Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ —Ç–∞ –∞–¥–∞–ø—Ç–æ–≤–∞–Ω–æ)

class Shotgun:
    def __init__(self):
        self.damage = 1
        self.rounds = []

    def doubleDamage(self):
        self.damage = 2

    def resetDamage(self):
        self.damage = 1

    def addRounds(self, live=0, blank=0):
        self.rounds = [True]*live + [False]*blank
        random.shuffle(self.rounds)

    def pickRound(self):
        if not self.rounds:
            return None
        return self.rounds.pop()

class Player:
    def __init__(self, name, health=4):
        self.name = name
        self.health = health
        self.items = []
        self.turnsWaiting = 0

    def takeDamage(self, dmg):
        self.health -= dmg
        return self.health <= 0

    def addHealth(self, h=1):
        self.health = min(self.health + h, 5)

    def useItem(self, item, shotgun, enemy):
        if item not in self.items:
            return "–ù–µ–º–∞—î —Ç–∞–∫–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞"
        self.items.remove(item)
        if item == "üö¨":
            self.addHealth(1)
            return "–í–∏–∫—É—Ä–µ–Ω–æ —Å–∏–≥–∞—Ä–µ—Ç—É. +1 HP"
        elif item == "üç∫":
            if shotgun.rounds:
                shotgun.rounds.pop()
                return "–í—ñ–¥–∫–∏–Ω—É—Ç–æ 1 –Ω–∞–±—ñ–π"
            return "–ù–µ–º–∞—î –Ω–∞–±–æ—ó–≤"
        elif item == "üî™":
            shotgun.doubleDamage()
            return "–ü–æ–¥–≤–æ—î–Ω–æ —à–∫–æ–¥—É!"
        elif item == "üîç":
            if not shotgun.rounds:
                return "–ù–µ–º–∞—î –Ω–∞–±–æ—ó–≤"
            return "–ù–∞—Å—Ç—É–ø–Ω–∏–π –Ω–∞–±—ñ–π: –ë–û–ô–û–í–ò–ô" if shotgun.rounds[-1] else "–ù–∞—Å—Ç—É–ø–Ω–∏–π –Ω–∞–±—ñ–π: –•–û–õ–û–°–¢–ò–ô"
        elif item == "‚õì":
            enemy.turnsWaiting = 1
            return f"{enemy.name} –∑–≤'—è–∑–∞–Ω–∏–π —ñ –ø—Ä–æ–ø—É—Å–∫–∞—î —Ö—ñ–¥"
        elif item == "üì±":
            enemy.turnsWaiting = 1
            return f"{enemy.name} –ø—Ä–æ–ø—É—Å–∫–∞—î —Ö—ñ–¥ —á–µ—Ä–µ–∑ –¥–∑–≤—ñ–Ω–æ–∫"
        elif item == "üîß":
            if shotgun.rounds:
                shotgun.rounds[-1] = not shotgun.rounds[-1]
                new_type = "–ë–û–ô–û–í–ò–ô" if shotgun.rounds[-1] else "–•–û–õ–û–°–¢–ò–ô"
                return f"–ù–∞—Å—Ç—É–ø–Ω–∏–π –ø–∞—Ç—Ä–æ–Ω —Ç–µ–ø–µ—Ä {new_type}"
            else:
                return "–ù–µ–º–∞—î –ø–∞—Ç—Ä–æ–Ω—ñ–≤ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–æ—Ä–∞"
        return "–ù—ñ—á–æ–≥–æ –Ω–µ –≤—ñ–¥–±—É–ª–æ—Å—è"

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≥—Ä–∞–≤—Ü—ñ–≤ —Ç–∞ –¥—Ä–æ–±–æ–≤–∏–∫–∞
player = Player("–ì—Ä–∞–≤–µ—Ü—å")
dealer = Player("–î–∏–ª–µ—Ä")
player.items = ["üö¨", "üç∫", "üîç", "üì±", "üîß"]
dealer.items = ["üî™", "‚õì"]
shotgun = Shotgun()
shotgun.addRounds(2, 4)

message = "–í—ñ—Ç–∞—î–º–æ –≤ –≥—Ä—ñ!"
turn = "player"

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –¥—ñ–π –≥—Ä–∞–≤—Ü—è
class Button:
    def __init__(self, text, x, y, w=150, h=60):
        self.text = text
        self.rect = pygame.Rect(x, y, w, h)

    def draw(self):
        pygame.draw.rect(screen, (200, 0, 0), self.rect)
        font = pygame.font.SysFont('consolas', 30)
        txt = font.render(self.text, True, (255, 255, 255))
        txt_rect = txt.get_rect(center=self.rect.center)
        screen.blit(txt, txt_rect)

    def is_clicked(self, pos):
        return self.rect.collidepoint(pos)

spin_btn = Button("–ó–ê–†–Ø–î–ò–¢–ò", 50, screen_height - 100)
shoot_btn = Button("–°–¢–†–Ü–õ–Ø–¢–ò", 250, screen_height - 100)
radio_btn = Button("üéµ –†–ê–î–Ü–û", 450, screen_height - 100)

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –≥—Ä–∞–≤—Ü—è (—Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏–º–µ–º–æ –¥–∏–Ω–∞–º—ñ—á–Ω–æ)
item_buttons = []

def update_item_buttons():
    item_buttons.clear()
    x = 650
    y = screen_height - 100
    for item in player.items:
        btn = Button(item, x, y, 50, 50)
        item_buttons.append(btn)
        x += 60

update_item_buttons()

def reset_game():
    global player, dealer, shotgun, turn, message
    player = Player("–ì—Ä–∞–≤–µ—Ü—å")
    dealer = Player("–î–∏–ª–µ—Ä")
    player.items = ["üö¨", "üç∫", "üîç", "üì±", "üîß"]
    dealer.items = ["üî™", "‚õì"]
    shotgun = Shotgun()
    shotgun.addRounds(2, 4)
    turn = "player"
    message = "–ì—Ä–∞ –ø–æ—á–∞–ª–∞—Å—å! –í–∞—à —Ö—ñ–¥."
    update_item_buttons()

def shoot():
    global message, turn
    bullet = shotgun.pickRound()
    if bullet is None:
        message = "–ù–µ–º–∞—î –Ω–∞–±–æ—ó–≤! –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –ó–ê–†–Ø–î–ò–¢–ò."
        return

    if turn == "player":
        if bullet:
            dead = dealer.takeDamage(shotgun.damage)
            message = "–í–∏ –≤–ª—É—á–∏–ª–∏ –≤ –î–ò–õ–ï–†–ê!"
            if dead:
                message = "–í–ò –ü–ï–†–ï–ú–û–ì–õ–ò!"
        else:
            message = "–í–∏ –ø—Ä–æ–º–∞—Ö–Ω—É–ª–∏—Å—å. –•—ñ–¥ –î–∏–ª–µ—Ä–∞."
            turn = "dealer"
    elif turn == "dealer":
        if dealer.turnsWaiting:
            dealer.turnsWaiting -= 1
            message = "–î–∏–ª–µ—Ä –ø—Ä–æ–ø—É—Å–∫–∞—î —Ö—ñ–¥!"
            turn = "player"
            return
        if bullet:
            dead = player.takeDamage(shotgun.damage)
            message = "–î–∏–ª–µ—Ä –≤–ª—É—á–∏–≤ —É –í–ê–°!"
            if dead:
                message = "–í–ò –ü–û–ú–ï–†–õ–ò!"
        else:
            message = "–î–∏–ª–µ—Ä –ø—Ä–æ–º–∞—Ö–Ω—É–≤—Å—è. –í–∞—à —Ö—ñ–¥."
            turn = "player"
    shotgun.resetDamage()

def spin():
    shotgun.addRounds(2, 4)
    global message
    message = "–ó–∞—Ä—è–¥–∂–µ–Ω–æ!"

# --------------------
# –î–û–î–ê–ù–û: –ö—ñ–Ω–µ—Ü—å —ñ–≥—Ä–æ–≤–æ—ó –ª–æ–≥—ñ–∫–∏
# --------------------

# –ó–º—ñ–Ω–Ω–∞, —â–æ –≤–∏–∑–Ω–∞—á–∞—î —á–∏ –≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞
game_started = False

# –ì–æ–ª–æ–≤–Ω–∏–π —ñ–≥—Ä–æ–≤–∏–π —Ü–∏–∫–ª
running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

        # –û–±—Ä–æ–±–∫–∞ –∫–ª—ñ–∫—ñ–≤ –º–∏—à—ñ
        if event.type == pygame.MOUSEBUTTONDOWN and event.button == 1:  # –õ—ñ–≤–∞ –∫–Ω–æ–ø–∫–∞ –º–∏—à—ñ
            mouse_x, mouse_y = event.pos

            if not game_started:
                # –ú–µ–Ω—é: –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–Ω–æ–ø–æ–∫
                if play_button_rect.collidepoint(mouse_x, mouse_y) and show_buttons:
                    # –°—Ç–∞—Ä—Ç—É—î–º–æ –≥—Ä—É
                    background = pygame.image.load("./img/bg_game.png")  # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –Ω–æ–≤–∏–π —Ñ–æ–Ω
                    background = pygame.transform.scale(background, (screen_width, screen_height))
                    show_dictator = True
                    show_buttons = False
                    game_started = True
                    reset_game()

                elif options_button_rect.collidepoint(mouse_x, mouse_y) and show_buttons:
                    print("Options button clicked!")
                    # –¢—É—Ç –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –æ–ø—Ü—ñ—ó

                elif exit_button_rect.collidepoint(mouse_x, mouse_y) and show_buttons:
                    running = False
            else:
                # –Ø–∫—â–æ –≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞ ‚Äî –æ–±—Ä–æ–±–ª—è—î–º–æ –∫–Ω–æ–ø–∫–∏ –¥—ñ–π
                if spin_btn.is_clicked((mouse_x, mouse_y)):
                    spin()
                elif shoot_btn.is_clicked((mouse_x, mouse_y)):
                    shoot()
                elif radio_btn.is_clicked((mouse_x, mouse_y)):
                    # –ú–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –º—É–∑–∏–∫—É, –ø–æ–∫–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                    message = "–†–∞–¥—ñ–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ"
                else:
                    # –ö–ª—ñ–∫ –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞—Ö –≥—Ä–∞–≤—Ü—è
                    for btn in item_buttons:
                        if btn.is_clicked((mouse_x, mouse_y)):
                            result = player.useItem(btn.text, shotgun, dealer)
                            message = result
                            update_item_buttons()
                            break

    # –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω—ñ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –º–∏—à—ñ
    mouse_x, mouse_y = pygame.mouse.get_pos()

    # –ó–º—ñ–Ω–∞ –∫—É—Ä—Å–æ—Ä–∞
    if (play_button_rect.collidepoint(mouse_x, mouse_y) or
        options_button_rect.collidepoint(mouse_x, mouse_y) or
        exit_button_rect.collidepoint(mouse_x, mouse_y)) and show_buttons:
        pygame.mouse.set_cursor(*hand_cursor)  # –ó–º—ñ–Ω—é—î–º–æ –∫—É—Ä—Å–æ—Ä –Ω–∞ —Ä—É–∫—É
    else:
        pygame.mouse.set_cursor(*default_cursor)  # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π –∫—É—Ä—Å–æ—Ä

    # –î–æ–¥–∞–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é –¥–ª—è –∫–Ω–æ–ø–æ–∫ (—Ç—ñ–ª—å–∫–∏ –≤ –º–µ–Ω—é)
    play_button_offset = 0
    options_button_offset = 0
    exit_button_offset = 0

    if not game_started:
        if play_button_rect.collidepoint(mouse_x, mouse_y):
            play_button_offset = 10
        if options_button_rect.collidepoint(mouse_x, mouse_y):
            options_button_offset = 10
        if exit_button_rect.collidepoint(mouse_x, mouse_y):
            exit_button_offset = 10

    # –ú–∞–ª—é—î–º–æ —Ñ–æ–Ω
    screen.blit(background, (0, 0))

    # –ú–∞–ª—é—î–º–æ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é, —è–∫—â–æ –≤–æ–Ω–∏ –ø–æ–∫–∞–∑–∞–Ω—ñ
    if show_buttons:
        screen.blit(play_button, play_button_rect.move(0, play_button_offset))
        screen.blit(options_button, options_button_rect.move(0, options_button_offset))
        screen.blit(exit_button, exit_button_rect.move(0, exit_button_offset))

    # –ú–∞–ª—é—î–º–æ –¥–∏–∫—Ç–æ—Ä–∞, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
    if show_dictator:
        screen.blit(dictator_image, dictator_rect)

    # –Ø–∫—â–æ –≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞ ‚Äî –º–∞–ª—é—î–º–æ UI –≥—Ä–∏
    if game_started:
        # –ú–∞–ª—é—î–º–æ –∫–Ω–æ–ø–∫–∏ –¥—ñ–π
        spin_btn.draw()
        shoot_btn.draw()
        radio_btn.draw()

        # –ú–∞–ª—é—î–º–æ –∑–¥–æ—Ä–æ–≤'—è –≥—Ä–∞–≤—Ü—è —ñ –¥–∏–ª–µ—Ä–∞
        font = pygame.font.SysFont('consolas', 40)
        player_health_text = font.render(f"–ì—Ä–∞–≤–µ—Ü—å HP: {player.health}", True, (255, 255, 255))
        dealer_health_text = font.render(f"–î–∏–ª–µ—Ä HP: {dealer.health}", True, (255, 255, 255))
        screen.blit(player_health_text, (50, 50))
        screen.blit(dealer_health_text, (50, 100))

        # –ú–∞–ª—é—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        msg_font = pygame.font.SysFont('consolas', 30)
        msg_surface = msg_font.render(message, True, (255, 255, 0))
        screen.blit(msg_surface, (50, 150))

        # –ú–∞–ª—é—î–º–æ –∫–Ω–æ–ø–∫–∏ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –≥—Ä–∞–≤—Ü—è
        for btn in item_buttons:
            btn.draw()

    # –û–Ω–æ–≤–ª—é—î–º–æ –µ–∫—Ä–∞–Ω
    pygame.display.update()

# –ó–∞–≤–µ—Ä—à—É—î–º–æ —Ä–æ–±–æ—Ç—É Pygame
pygame.quit()
sys.exit()

